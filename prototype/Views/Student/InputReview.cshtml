@{
    ViewBag.Title = "- Enrollment";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";

}

@model List<prototype.Models.StudentGrading>

@{
    var studentEnlistment = TempData["Images"] != null ?
        System.Text.Json.JsonSerializer.Deserialize<prototype.Models.Student.StudentEnlistment>(TempData["Images"].ToString()) : null;

    var studentYrScreening = TempData["SelectedYearSemester"] != null ?
        System.Text.Json.JsonSerializer.Deserialize<prototype.Models.Student.StudentYrScreening>(TempData["SelectedYearSemester"].ToString()) : null;

    // Adjusted program retrieval to get only the relevant information
    string programChosen = TempData["Program"] != null ?
        System.Text.Json.JsonSerializer.Deserialize<prototype.Models.Student.StudentYrScreening>(TempData["Program"].ToString()).PROGRAMS_OFFER : "No Program Selected";

    // Log JSON format
    var gradeJson = TempData["Grade"]?.ToString();
    Console.WriteLine("Grade JSON: " + gradeJson); // Check the JSON format

        // Deserialize as a list of StudentGrading
        var studentGrading = TempData["Grade"] != null ?
            System.Text.Json.JsonSerializer.Deserialize<List<StudentGrading>>(TempData["Grade"].ToString()) : null;
}

<div class="container" id="main-container">
    <div id="content-form" class="p-md-5 p-3 mt-3">
        @await Html.PartialAsync("_LogoutModal")

        <div>
            <ul class="progressbar">
                <li class="active"><a style="color:black;">Recent ID Picture</a></li>
                <li class="active"><a style="color:black;">Year Level and Screening</a></li>
                <li class="active"><a style="color:black;">Program</a></li>
                <li class="active"><a style="color:black;">Grades Input</a></li>
                <li class="active"><a style="color:black;">Input Review and Electronic Consent</a></li>
                <li><a style="color:black;">Reference ID</a></li>
            </ul>
        </div>
        <br />

        <h1 class="mt-3">Student Enlistment Form</h1>
        <hr style="width: 100%;">

        <form asp-action="InputReview" method="post">

@{
    // Define the selected values from studentYrScreening if available
    string selectedYearLevel = studentYrScreening?.YR_LEVEL;
    string selectedTerm = studentYrScreening?.YR_TERM;

    // Define the options for Year Level and Term as SelectList objects
    var yearLevelOptions = new List<SelectListItem>
    {
        new SelectListItem { Text = "Select Year Level", Value = "", Disabled = true, Selected = (selectedYearLevel == null) },
        new SelectListItem { Text = "1st Year", Value = "1", Selected = (selectedYearLevel == "1st Year") },
        new SelectListItem { Text = "2nd Year", Value = "2", Selected = (selectedYearLevel == "2nd Year") },
        new SelectListItem { Text = "3rd Year", Value = "3", Selected = (selectedYearLevel == "3rd Year") },
        new SelectListItem { Text = "4th Year", Value = "4", Selected = (selectedYearLevel == "4th Year") }
    };

    var termOptions = new List<SelectListItem>
    {
        new SelectListItem { Text = "Select Term", Value = "", Disabled = true, Selected = (selectedTerm == null) },
        new SelectListItem { Text = "1st Semester", Value = "1", Selected = (selectedTerm == "1st Semester") },
        new SelectListItem { Text = "2nd Semester", Value = "2", Selected = (selectedTerm == "2nd Semester") }
    };
}
            

                <div class="d-flex gap-5 justify-content-center align-items-center">
                <div class="first-half">
                    <div class="row row-cols-1 row-cols-md-3 text-center mb-3">
                        <div class="col text-uppercase fw-bold mb-2">Year Level</div>
                        <div class="col text-uppercase fw-bold mb-2">TERM</div>
                        <div class="col text-uppercase fw-bold mb-2">Applying as</div>
                        <div style="width: 33%;">
                            <select name="YR_LEVEL" id="yearLevel" class="form-control">
                                <option disabled>Select Year Level</option>
                                @if (ViewBag.YR_LEVEL == "1st Year")
                                {
                                    <option value="1" selected>1st Year</option>
                                }
                                else
                                {
                                    <option value="1">1st Year</option>
                                }

                                @if (ViewBag.YR_LEVEL == "2nd Year")
                                {
                                    <option value="2" selected>2nd Year</option>
                                }
                                else
                                {
                                    <option value="2">2nd Year</option>
                                }

                                @if (ViewBag.YR_LEVEL == "3rd Year")
                                {
                                    <option value="3" selected>3rd Year</option>
                                }
                                else
                                {
                                    <option value="3">3rd Year</option>
                                }

                                @if (ViewBag.YR_LEVEL == "4th Year")
                                {
                                    <option value="4" selected>4th Year</option>
                                }
                                else
                                {
                                    <option value="4">4th Year</option>
                                }
                            </select>
                        </div>

                        <div style="width: 33%;">
                            <select name="YR_TERM" id="term" class="form-control">
                                <option disabled>Select Semester</option>
                                @if (ViewBag.YR_TERM == "1st Semester")
                                {
                                    <option value="1" selected>1st Semester</option>
                                }
                                else
                                {
                                    <option value="1">1st Semester</option>
                                }

                                @if (ViewBag.YR_TERM == "2nd Semester")
                                {
                                    <option value="2" selected>2nd Semester</option>
                                }
                                else
                                {
                                    <option value="2">2nd Semester</option>
                                }
                            </select>
                        </div>

                        <div class="col">
                            <select name="APPLYING_AS" id="applying_As" class="form-control">
                                <option disabled>Select Semester</option>
                                @if (ViewBag.APPLYING_AS == "REGULAR")
                                {
                                    <option value="REGULAR" selected>REGULAR</option>
                                }
                                else
                                {
                                    <option value="REGULAR">REGULAR</option>
                                }

                                @if (ViewBag.APPLYING_AS == "IRREGULAR")
                                {
                                    <option value="IRREGULAR" selected>IRREGULAR</option>
                                }
                                else
                                {
                                    <option value="IRREGULAR">IRREGULAR</option>
                                }

                                @if (ViewBag.APPLYING_AS == "SHIFTEE")
                                {
                                    <option value="SHIFTEE" selected>SHIFTEE</option>
                                }
                                else
                                {
                                    <option value="SHIFTEE">SHIFTEE</option>
                                }
                            </select>
                        </div>
                    </div>
                      <div class="row mb-3">
                    <div class="col">
                        <p class="fw-bold text-center">ACADEMIC YEAR</p>
                        <div class="d-flex align-items-center gap-2">
                        <span>FROM</span>
                                <input type="text" name="ACADEMIC_FROM" id="academicYearFrom" class="form-control" value="@ViewBag.ACADEMIC_FROM" disabled>
                                <span>TO</span>
                                <input type="text" name="ACADEMIC_TO" id="academicYearTo" class="form-control" value="@ViewBag.ACADEMIC_TO" disabled>
                            </div>
                        </div>
                        <div class="col">
                            <p class="fw-bold text-uppercase text-center">program chosen</p>
                                    <input type="text" id="programChosen" name="PROGRAMS_OFFER" class="form-control"
                                           value="@ViewBag.ProgramChosen" disabled />
                                </div>
                                </div>
                                </div>

                        <!-- Display Image if Available -->
                <div class="second-half" style="margin-left:12%; border-width:10px; border-color: #848181;">
                            @if (!string.IsNullOrEmpty(ViewBag.ImageSrc))
                            {
                        <img src="@ViewBag.ImageSrc" alt="Student Image" class="img-thumbnail" style="width: 300px; max-height: 300px; border: 2px solid gray;" />
                            }
                            else
                            {
                                <p>No recent ID picture available.</p>
                            }
                        </div>
            </div>
<br>
            <!-- Modal for confirmation -->
            <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="confirmModalLabel">Confirm Year and Term Change</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to change the Year and Term? This will reset your current selection.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="confirmChange">Yes, Change</button>
                        </div>
                    </div>
                </div>
            </div>
           <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Select the year, term, and applying as dropdown elements
                    const yearSelect = document.getElementById('yearLevel');
                    const termSelect = document.getElementById('term');
                    const applyingAsSelect = document.getElementById('applying_As');

                    // Store the original values
                    let originalYear = yearSelect.value;
                    let originalTerm = termSelect.value;
                    let originalApplyingAs = applyingAsSelect.value;

                    // Detect changes in year, term, or applying as, and show the modal if they change
                    function showModalIfChanged() {
                        if (yearSelect.value !== originalYear || termSelect.value !== originalTerm || applyingAsSelect.value !== originalApplyingAs) {
                            // Show the modal on any change
                            $('#confirmModal').modal('show');
                        }
                    }

                    yearSelect.addEventListener('change', showModalIfChanged);
                    termSelect.addEventListener('change', showModalIfChanged);
                    applyingAsSelect.addEventListener('change', showModalIfChanged);

                    // Handle modal confirmation (change year, term, or applying as)
                    document.getElementById('confirmChange').addEventListener('click', function () {
                        // Reset the original values after confirmation
                        originalYear = yearSelect.value;
                        originalTerm = termSelect.value;
                        originalApplyingAs = applyingAsSelect.value;

                        // Hide the modal after confirmation
                        $('#confirmModal').modal('hide');

                        // Redirect to the Year selection page or handle as required
                        window.location.href = '@Url.Action("Year", "Student")';  // Redirect to year selection page
                    });
                });

               </script>

           
<!-- Display grades table -->
<center>
                <h2> <strong>GRADES</strong></h2>
            </center>
<div class="container text-center">
    @if (Model != null && Model.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Subject Code</th>
                    <th>Subject Name</th>
                    <th>Units</th>
                                <th style="text-align: center; line-height:30px; width: 150px;">Grade</th>
                                <th style="text-align: center; line-height:30px; width: 180px;">Remarks</th>
                </tr>
            </thead>
            <tbody>
    @foreach (var grading in Model)
    {
        <tr style="line-height: 50px;">
            <td>@grading.CODE</td>
            <td>@grading.SUBJECT</td>
            <td>@grading.UNITS</td>
            <td>
                                        <input type="text" name="grades[@grading.CODE]" class="grade-input form-control" style="text-align: center; line-height:30px; width: 150px;" value="@grading.GRADE" />
            </td>
                                    <td><input type="text" name="remarks[@grading.GRADES_ID]" class="remarks form-control" style="text-align: center; line-height:30px; width: 180px;" value="@grading.REMARKS" disabled /></td>
        </tr>
    }

            </tbody>
        </table>
    }
    else
    {
        <p>No grading data available.</p>
    }

                </div>
                <div class="container text-center mt-4" style="width: 35%;">
                    <div class="row row-cols-2">
                        <div class="col mb-3"><p class="fw-bold">Total No. of Units</p></div>
                        <div class="col"><input type="number" name="total_units" class="form-control" readonly /></div>
                        <div class="col"><p class="fw-bold">GWA</p></div>
                        <div class="col"><input type="number" name="gwa" class="form-control" readonly /></div>
                    </div>
                </div>
            <div class="d-flex justify-content-between mt-4">
                <button class="btn next text-white" id="previousButton" type="button" onclick="goBack()"><i class="fa-solid fa-chevron-left"></i> Previous</button>
                <button class="btn next text-white" type="button" data-bs-toggle="modal" data-bs-target="#consent">Next <i class="fa-solid fa-chevron-right"></i></button>
            </div>
            <div class="modal fade" id="consent" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5 text-danger text-center w-100" id="exampleModalLabel">Electronic Consent Form for Student Application</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Consent Text Here -->
                            <span class="fw-bold">Please read the following carefully and indicate your consent by checking the box provided:</span><br><br>
                            I, <b>Student Name</b>, hereby consent to participate in the student application process for <b>Quezon City University Online Registration Appointment (QORA)</b>.
                            <br><br>
                            <b>1. Purpose:</b> Admission/enrollment application in Quezon City University.<br>
                            <br><b>2. Information Collection:</b> <b>QORA</b> will collect personal information.<br><br>
                            <b>3. Use of Information:</b> I understand that the information collected will be used solely to evaluate my application for admission/enrollment.<br><br>

                            <b>4. Confidentiality:</b> I acknowledge that all information provided in this application will be treated confidentially and by applicable privacy laws and regulations.<br><br>

                            <b>5. Third-Party Access:</b> I understand that <b>Quezon City University Online Registration Appointment (QORA)</b> may share my information with third parties involved in the application evaluation process, such as admissions committees, faculty members, and relevant administrative staff.<br><br>

                            <b>6. Electronic Communication:</b> I consent to receive electronic communications from QORA regarding my application status, updates, and other relevant information.<br><br>

                            <b>7. Signature:</b> By checking the box below, I certify that all information provided in this application is true and accurate to the best of my knowledge.<br><br>

                            <p class="text-center m-0"><b>I consent to the terms outlined above.</b></p><br>
                            <p class="text-center m-0"><b>Date: @DateTime.Now.ToString("MM-dd-yyyy")</b></p><br>
                        </div>
                        <div class="modal-footer d-flex flex-column align-items-end">
                <button type="submit" id="formSubmit" class="btn btn-primary next" style="width: 50%; border: 2px solid var(--main-color);">Agree and Submit</button>
                            <button id="cancel_application" type="button" class="fw-bold btn btn-secondary cancel_application" data-bs-dismiss="modal" style="width: 50%; border: 2px solid var(--main-color); background: white; color: var(--main-color);">Cancel Application</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<script>
    document.getElementById('formSubmit').addEventListener('click', function () {
        // Trigger form submission
        document.querySelector('form').submit();
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Function to compute the total units
        function computeTotalUnits() {
            let totalUnits = 0;

            // Loop through each subject row
            document.querySelectorAll("table tbody tr").forEach(function (row) {
                // Get the units from the third column (index 2) of each row
                let units = parseFloat(row.cells[2].innerText);
                if (!isNaN(units)) {
                    totalUnits += units;
                }
            });

            // Log and update the Total No. of Units input field
            console.log("Total Units Calculated:", totalUnits);
            document.querySelector("input[name='total_units']").value = totalUnits.toFixed(2);  // Limit to 2 decimal places
            return totalUnits;
        }

        // Function to calculate GWA
        function calculateGWA() {
            let totalGradePoints = 0;
            let totalUnits = 0;

            document.querySelectorAll("table tbody tr").forEach(function (row) {
                const gradeInput = row.querySelector('input[name^="grades"]');
                const unitsText = row.querySelector('td:nth-child(3)').innerText;

                // Parse grade and units as numbers
                const grade = parseFloat(gradeInput ? gradeInput.value : 0).toFixed(2);  // Limit grade to 2 decimal places
                const units = parseFloat(unitsText);

                if (!isNaN(grade) && !isNaN(units)) {
                    totalGradePoints += grade * units;
                    totalUnits += units;
                }
            });

            // Calculate GWA if total units is not zero
            const gwa = totalUnits !== 0 ? (totalGradePoints / totalUnits).toFixed(2) : 0;

            // Log and update GWA input field
            console.log("GWA Calculated:", gwa);
            document.querySelector("input[name='gwa']").value = gwa;
        }

        // Function to update remarks based on grade
        function updateRemarks() {
            const gradeInputs = document.querySelectorAll('input[name^="grades"]');

            gradeInputs.forEach(function (gradeInput) {
                let gradeValue = parseFloat(gradeInput.value).toFixed(2);  // Limit to 2 decimal places
                const remarksInput = gradeInput.closest('tr').querySelector('input[name^="remarks"]');

                // Validation: Ensure grades are between 0 and 100
                if (gradeValue < 0) {
                    gradeValue = 0;
                    gradeInput.value = gradeValue;
                } else if (gradeValue > 100) {
                    gradeValue = 100;
                    gradeInput.value = gradeValue;
                }

                if (!isNaN(gradeValue)) {
                    let remarks = "";
                    if (Number.isInteger(gradeValue) || gradeValue === "1.00") {  // Handle 1.00 correctly
                        if (gradeValue >= 98) {
                            remarks = "Excellent";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 95) {
                            remarks = "Excellent";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 92) {
                            remarks = "Very Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 89) {
                            remarks = "Very Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 86) {
                            remarks = "Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 83) {
                            remarks = "Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 80) {
                            remarks = "Satisfactory";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 77) {
                            remarks = "Satisfactory";
                            remarksInput.style.color = "green";
                        } else if (gradeValue >= 75) {
                            remarks = "Passed";
                            remarksInput.style.color = "green";
                        } else {
                            remarks = "Failed";
                            remarksInput.style.color = "red";
                        }
                    } else {  // Fractional grade (e.g., 1.00, 1.25, etc.)
                        if (gradeValue <= 1.00) {
                            remarks = "Excellent";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 1.25) {
                            remarks = "Excellent";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 1.50) {
                            remarks = "Very Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 1.75) {
                            remarks = "Very Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 2.00) {
                            remarks = "Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 2.25) {
                            remarks = "Good";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 2.50) {
                            remarks = "Satisfactory";
                            remarksInput.style.color = "green";
                        } else if (gradeValue <= 2.75) {
                            remarks = "Satisfactory";
                            remarksInput.style.color = "green";
                        } else if (gradeValue === 3.00) {
                            remarks = "Passed";
                            remarksInput.style.color = "green";
                        } else if (gradeValue === 4 || gradeValue === 5) {
                            remarks = "Failed";
                            remarksInput.style.color = "red";
                        } else {
                            remarks = "Invalid grade";
                            remarksInput.style.color = "red";
                        }
                    }
                    remarksInput.value = remarks;
                } else {
                    remarksInput.value = "";
                    remarksInput.style.color = "";
                }
            });
        }

        // Recompute the total units, GWA, and remarks when any grade input changes
        document.querySelectorAll('input[name^="grades"]').forEach(function (input) {
            input.addEventListener('input', function () {
                computeTotalUnits();
                calculateGWA();
                updateRemarks();
            });
        });

        // Initial computation on page load
        computeTotalUnits();
        calculateGWA();
        updateRemarks();
    });

    function goBack() {
        // Navigate to Grade.cshtml (update the URL as necessary)
        window.location.href = '@Url.Action("Grade", "Student")';
    }
</script>
